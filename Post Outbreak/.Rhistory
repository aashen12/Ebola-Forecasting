source("robust_bmars2.R")
f <-function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # noise sd
n <- 500 # number of observations
x <- matrix(runif(n*10),n,10) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma) #+ rnorm(n)
index <- sample(n, 20)
y[index] <- y[index] + rnorm(index, 0, 15)
nmcmc <- 3000
mod <- bmars(x, its = nmcmc, nu = 5, verbose = TRUE)
X <- mod$X
beta <- mod$beta
mod$count
mod$nknot[length(mod$nknot)]
tail(mod$nknot, 25)
tail(mod$mat_beta[,1:(mod$nknot[length(mod$nknot)]+1)])
as.vector(beta)
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[seq(nmcmc/2,nmcmc,by=2),]), type="l",
main = "Plot of v_i values over time")
hist(colMeans((mod$mat_w[seq(nmcmc/2,nmcmc,by=2),])))
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
points((X %*% beta)[index],y[index],col="red")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
var(a[-index])
plot(mod$alpha,type="l")
plot(mod$mat_tau2,type="l")
tail(mod$mat_sig)
tail(sqrt(mod$mat_w[,1:25]))
var((y-(X%*%beta)))
var(y)
plot(mod$mat_u,type="l")
plot(mod$alpha,type="l")
plot(mod$nknot, type = "l",
main = "Number of knots over time")
# plot(mod$alpha, type = "l",
#      main = "alpha^2 values over time")
plot(mod$mat_sig, type = "l",
main = "Sigma^2 values over time")
plot(mod$lam, type = "l",
main = "Lambda values over time")
# matplot(mod$mat_beta, type = "l",
#         main = "Plot of regression coefficients over time")
matplot(sqrt(mod$mat_w[seq(nmcmc/2,nmcmc,by=2),]), type="l",
main = "Plot of v_i values over time")
hist(colMeans((mod$mat_w[seq(nmcmc/2,nmcmc,by=2),])))
# matplot(sqrt(mod$mat_u), type="l",
#         main = "Plot of u_i values over time")
plot(X %*% beta, y,
main = "Bayesian predicted values vs actual y values")
points((X %*% beta)[index],y[index],col="red")
abline(0, 1, lwd = 5, col = "blue1") #should follow a very straight line
mod1 <- lm(y ~ X %*% beta); rsq <- summary(mod1)$r.squared
cat("The predicted y values are correlated with the actual values with
an R^2 of", rsq, "\n")
a<-(y-(X %*% (mod$mat_beta)[nrow(mod$mat_beta),(1:(mod$nknot[nmcmc]+1))]))
plot(a,type="l")
var(a[-index])
plot(mod$alpha,type="l")
plot(mod$mat_tau2,type="l")
plot(mod$mat_u,type="l")
as.numeric("o")
is.na(as.numeric("8"))
is.integer(9)
as.integer(9)
as.integer(9.8)
9/1
9.9/1
9.9 %% 1
9 %% 1
is.na(as.numeric(x[i]))
is.na(as.numeric("TRUE"))
is.logical(as.character("FALSE))
)
is.na(as.numeric("TRUE"))
is.logical(as.character("FALSE"))
is.logical(as.logical("FALSE"))
is.logical(as.logical("FALSER"))
typeof("TRUE")
typeof(as.logical("TRUE"))
typeof(as.logical("TUE"))
as.logical("TUE")
as.logical("TRUE")
by_type<-function(x,sort=T){
x<-as.character(x)
chars<-dbls<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(as.numeric(x[i]))) {
chars[i]<-x[i]
} else if(as.logical(x[i]) == TRUE){
chars[i]<-x[i]
} else if(as.logical(x[i]) == FALSE){
chars[i]<-x[i]
} else{
if(x[i] %% 1 == 0) {
#integer
ints[i]<-x[i]
} else{
#dbl
dbl[i]<-x[i]
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
by_type<-function(x,sort=T){
x<-as.character(x)
chars<-dbls<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(as.numeric(x[i]))) {
chars[i]<-x[i]
} else if(as.logical(x[i]) == "TRUE"){
chars[i]<-x[i]
} else if(as.logical(x[i]) == "FALSE"){
chars[i]<-x[i]
} else{
if(x[i] %% 1 == 0) {
#integer
ints[i]<-x[i]
} else{
#dbl
dbl[i]<-x[i]
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
by_type<-function(x,sort=T){
x<-as.character(x)
chars<-dbls<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(as.numeric(x[i]))) {
chars[i]<-x[i]
} else if(x[i])== "TRUE"){
chars[i]<-x[i]
} else if(x[i] == "FALSE"){
chars[i]<-x[i]
} else{
if(x[i] %% 1 == 0) {
#integer
ints[i]<-x[i]
} else{
#dbl
dbl[i]<-x[i]
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
by_type<-function(x,sort=T){
x<-as.character(x)
chars<-dbls<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(as.numeric(x[i]))) {
chars[i]<-x[i]
} else if(x[i]=="TRUE"){
chars[i]<-x[i]
} else if(x[i]=="FALSE"){
chars[i]<-x[i]
} else{
if(x[i] %% 1 == 0) {
#integer
ints[i]<-x[i]
} else{
#dbl
dbl[i]<-x[i]
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
set.seed(1)
x <- sample(c(1:10, (1:10)*0.3, letters[1:10]))
by_type(x)
by_type(x, sort = TRUE)
x <- 10:1
by_type(x, sort = TRUE)
x <- logical(5)
by_type(x)
x <- seq(0,4,by = 0.2)
by_type(x)
by_type<-function(x,sort=T){
x<-as.character(x)
chars<-dbl<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(as.numeric(x[i]))) {
chars[i]<-x[i]
} else if(x[i]=="TRUE"){
chars[i]<-x[i]
} else if(x[i]=="FALSE"){
chars[i]<-x[i]
} else{
if(x[i] %% 1 == 0) {
#integer
ints[i]<-x[i]
} else{
#dbl
dbl[i]<-x[i]
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
by_type<-function(x,sort=T){
x<-as.character(x)
chars<-dbl<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(as.numeric(x[i]))) {
chars[i]<-x[i]
} else if(x[i]=="TRUE"){
chars[i]<-x[i]
} else if(x[i]=="FALSE"){
chars[i]<-x[i]
} else{
x[i]<-as.numeric(x[i])
if(x[i] %% 1 == 0) {
#integer
ints[i]<-x[i]
} else{
#dbl
dbl[i]<-x[i]
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
by_type<-function(x,sort=T){
x<-as.character(x)
chars<-dbl<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(as.numeric(x[i]))) {
chars[i]<-x[i]
} else if(x[i]=="TRUE"){
chars[i]<-x[i]
} else if(x[i]=="FALSE"){
chars[i]<-x[i]
} else{
n<-as.numeric(x[i])
if(n %% 1 == 0) {
#integer
ints[i]<-n
} else{
#dbl
dbl[i]<-n
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
by_type<-function(x,sort=T){
x<-as.character(x)
chars<-dbl<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(suppressWarnings(as.numeric(x[i])))) {
chars[i]<-x[i]
} else if(x[i]=="TRUE"){
chars[i]<-x[i]
} else if(x[i]=="FALSE"){
chars[i]<-x[i]
} else{
n<-as.numeric(x[i])
if(n %% 1 == 0) {
#integer
ints[i]<-n
} else{
#dbl
dbl[i]<-n
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
set.seed(1)
x <- sample(c(1:10, (1:10)*0.3, letters[1:10]))
by_type(x)
by_type(x, sort = TRUE)
x <- 10:1
by_type(x, sort = TRUE)
x <- logical(5)
by_type(x)
x <- seq(0,4,by = 0.2)
by_type(x)
x <- c("house", "6", "2.2", "a", "3.4", "1")
by_type(x)
by_type<-function(x,sort=F){
x<-as.character(x)
chars<-dbl<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(suppressWarnings(as.numeric(x[i])))) {
chars[i]<-x[i]
} else if(x[i]=="TRUE"){
chars[i]<-x[i]
} else if(x[i]=="FALSE"){
chars[i]<-x[i]
} else{
n<-as.numeric(x[i])
if(n %% 1 == 0) {
#integer
ints[i]<-n
} else{
#dbl
dbl[i]<-n
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
by_type<-function(x,sort=F){
x<-as.character(x)
chars<-dbl<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(suppressWarnings(as.numeric(x[i])))) {
chars[i]<-x[i]
} else if(x[i]=="TRUE"){
chars[i]<-x[i]
} else if(x[i]=="FALSE"){
chars[i]<-x[i]
} else{
n<-as.numeric(x[i])
if(n %% 1 == 0) {
#integer
ints[i]<-n
} else{
#dbl
dbl[i]<-n
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
by_type<-function(x,sort=F){
x<-as.character(x)
chars<-dbl<-ints<-rep(NA,length(x))
for(i in seq_len(length(x))){
if(is.na(suppressWarnings(as.numeric(x[i])))) {
chars[i]<-x[i]
} else if(x[i]=="TRUE"){
chars[i]<-x[i]
} else if(x[i]=="FALSE"){
chars[i]<-x[i]
} else{
n<-as.numeric(x[i])
if(n %% 1 == 0) {
#integer
ints[i]<-n
} else{
#dbl
dbl[i]<-n
}
}
}
ints<-na.omit(ints)
dbl<-na.omit(dbl)
chars<-na.omit(chars)
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
by_type<-function(x,sort=F){
x<-as.character(x)
chars<-dbl<-ints<-c()
for(i in seq_len(length(x))){
if(is.na(suppressWarnings(as.numeric(x[i])))) {
chars<-c(chars,x[i])
} else if(x[i]=="TRUE"){
chars<-c(chars,x[i])
} else if(x[i]=="FALSE"){
chars<-c(chars,x[i])
} else{
n<-as.numeric(x[i])
if(n %% 1 == 0) {
#integer
ints<-c(ints,n)
} else{
#dbl
ints<-c(ints,n)
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
by_type<-function(x,sort=F){
x<-as.character(x)
chars<-dbl<-ints<-c()
for(i in seq_len(length(x))){
if(is.na(suppressWarnings(as.numeric(x[i])))) {
chars<-c(chars,x[i])
} else if(x[i]=="TRUE"){
chars<-c(chars,x[i])
} else if(x[i]=="FALSE"){
chars<-c(chars,x[i])
} else{
n<-as.numeric(x[i])
if(n %% 1 == 0) {
#integer
ints<-c(ints,n)
} else{
#dbl
dbl<-c(dbl,n)
}
}
}
if(sort==T){
return(list("integers"=sort(ints),"doubles"=sort(dbl),"character"=sort(chars)))
} else{
return(list("integers"=ints,"doubles"=dbl,"character"=chars))
}
}
x <- c("a", "1", "2.2", "house", "3.4", "6")
by_type(x)
set.seed(1)
x <- sample(c(1:10, (1:10)*0.3, letters[1:10]))
by_type(x)
by_type(x, sort = TRUE)
x <- 10:1
by_type(x, sort = TRUE)
x <- logical(5)
by_type(x)
x <- seq(0,4,by = 0.2)
by_type(x)
x <- c("house", "6", "2.2", "a", "3.4", "1")
by_type(x)
c()

df<-data.frame(mgrv,winv,lossv)
df %>% summarise(tg=winv+lossv,wins=winv,losses=lossv,winperc=wins/tg)
mgr<-baseball %>% select(Managers)
mgrex <- "(T.La Russa|(\\w\\.\\w+))"
recrex<-"(\\(\\d{1,3}\\-\\d{1,3}\\))"
mgrmatch<-str_match_all(mgr$Managers, mgrex)
mgrv<-c()
for(i in 1:length(mgrmatch)){
mgrv<-c(mgrv,mgrmatch[[i]][1,1])
}
mgrv<-factor(mgrv)
recmatch<-str_match_all(mgr$Managers,recrex)
wins<-str_match_all(recmatch,"\\((\\d{1,3})\\-\\d{1,3}\\)")
loss<-str_match_all(recmatch,"\\(\\d{1,3}\\-(\\d{1,3})\\)")
winv<-lossv<-c()
for(i in 1:length(wins)){
winv<-c(winv,wins[[i]][1,2])
lossv<-c(lossv,loss[[i]][1,2])
}
winv<-as.numeric(winv)
lossv<-as.numeric(lossv)
df<-data.frame(mgrv,winv,lossv)
df %>% group_by(mgrv) %>% summarise(tg=winv+lossv,wins=winv,losses=lossv,winperc=wins/tg)
df$mgrv
mgrmatch[[i]][1,1]
mgr
mgrmatch
mgr<-baseball %>% select(Managers)
mgrex <- "T.La Russa|(\\w\\.\\w+)"
recrex<-"(\\(\\d{1,3}\\-\\d{1,3}\\))"
mgrmatch<-str_match_all(mgr$Managers, mgrex)
mgrv<-c()
for(i in 1:length(mgrmatch)){
mgrv<-c(mgrv,mgrmatch[[i]][1,1])
}
mgrv<-factor(mgrv)
recmatch<-str_match_all(mgr$Managers,recrex)
wins<-str_match_all(recmatch,"\\((\\d{1,3})\\-\\d{1,3}\\)")
loss<-str_match_all(recmatch,"\\(\\d{1,3}\\-(\\d{1,3})\\)")
winv<-lossv<-c()
for(i in 1:length(wins)){
winv<-c(winv,wins[[i]][1,2])
lossv<-c(lossv,loss[[i]][1,2])
}
winv<-as.numeric(winv)
lossv<-as.numeric(lossv)
df<-data.frame(mgrv,winv,lossv)
df<-df %>% group_by(mgrv) %>% summarise(tg=winv+lossv,wins=winv,losses=lossv,winperc=wins/tg)
df$mgrv
mgrmatch
mgrv
mgr<-baseball %>% select(Managers)
mgrex <- "(T.La Russa|\\w\\.\\w+)"
recrex<-"(\\(\\d{1,3}\\-\\d{1,3}\\))"
mgrmatch<-str_match_all(mgr$Managers, mgrex)
mgrv<-c()
for(i in 1:length(mgrmatch)){
mgrv<-c(mgrv,mgrmatch[[i]][1,1])
}
mgrv<-factor(mgrv)
recmatch<-str_match_all(mgr$Managers,recrex)
wins<-str_match_all(recmatch,"\\((\\d{1,3})\\-\\d{1,3}\\)")
loss<-str_match_all(recmatch,"\\(\\d{1,3}\\-(\\d{1,3})\\)")
winv<-lossv<-c()
for(i in 1:length(wins)){
winv<-c(winv,wins[[i]][1,2])
lossv<-c(lossv,loss[[i]][1,2])
}
winv<-as.numeric(winv)
lossv<-as.numeric(lossv)
df<-data.frame(mgrv,winv,lossv)
df<-df %>% group_by(mgrv) %>% summarise(tg=winv+lossv,wins=winv,losses=lossv,winperc=wins/tg)
df$mgrv
mgr<-baseball %>% select(Managers)
mgrex <- "(T.La Russa|\\w\\.\\w+)"
recrex<-"(\\(\\d{1,3}\\-\\d{1,3}\\))"
mgrmatch<-str_match_all(mgr$Managers, mgrex)
mgrv<-c()
for(i in 1:length(mgrmatch)){
mgrv<-c(mgrv,mgrmatch[[i]][1,1])
}
mgrv<-factor(mgrv)
recmatch<-str_match_all(mgr$Managers,recrex)
wins<-str_match_all(recmatch,"\\((\\d{1,3})\\-\\d{1,3}\\)")
loss<-str_match_all(recmatch,"\\(\\d{1,3}\\-(\\d{1,3})\\)")
winv<-lossv<-c()
for(i in 1:length(wins)){
winv<-c(winv,wins[[i]][1,2])
lossv<-c(lossv,loss[[i]][1,2])
}
winv<-as.numeric(winv)
lossv<-as.numeric(lossv)
df<-data.frame(mgrv,winv,lossv)
df<-df %>% group_by(mgrv) %>% summarise(tg=winv+lossv,wins=winv,losses=lossv,winperc=wins/tg)
df
df %>% group_by(mgrv) %>% summarise(tg=sum(tg))
mgr<-baseball %>% select(Managers)
mgrex <- "(T.La Russa|\\w\\.\\w+)"
recrex<-"(\\(\\d{1,3}\\-\\d{1,3}\\))"
mgrmatch<-str_match_all(mgr$Managers, mgrex)
mgrv<-c()
for(i in 1:length(mgrmatch)){
mgrv<-c(mgrv,mgrmatch[[i]][1,1])
}
mgrv<-factor(mgrv)
recmatch<-str_match_all(mgr$Managers,recrex)
wins<-str_match_all(recmatch,"\\((\\d{1,3})\\-\\d{1,3}\\)")
loss<-str_match_all(recmatch,"\\(\\d{1,3}\\-(\\d{1,3})\\)")
winv<-lossv<-c()
for(i in 1:length(wins)){
winv<-c(winv,wins[[i]][1,2])
lossv<-c(lossv,loss[[i]][1,2])
}
winv<-as.numeric(winv)
lossv<-as.numeric(lossv)
df<-data.frame(mgrv,winv,lossv)
df<-df %>% group_by(mgrv) %>% summarise(tg=winv+lossv,wins=winv,losses=lossv,winperc=wins/tg)
df %>% group_by(mgrv) %>% summarise(tg=sum(tg),wins=sum(wins),losses=sum(losses),winperc=wints/tg)
df %>% group_by(mgrv) %>% summarise(tg=sum(tg),wins=sum(wins),losses=sum(losses),winperc=wins/tg)
mgr<-baseball %>% select(Managers)
mgrex <- "(T.La Russa|\\w\\.\\w+)"
recrex<-"(\\(\\d{1,3}\\-\\d{1,3}\\))"
mgrmatch<-str_match_all(mgr$Managers, mgrex)
mgrv<-c()
for(i in 1:length(mgrmatch)){
mgrv<-c(mgrv,mgrmatch[[i]][1,1])
}
mgrv<-factor(mgrv)
recmatch<-str_match_all(mgr$Managers,recrex)
wins<-str_match_all(recmatch,"\\((\\d{1,3})\\-\\d{1,3}\\)")
loss<-str_match_all(recmatch,"\\(\\d{1,3}\\-(\\d{1,3})\\)")
winv<-lossv<-c()
for(i in 1:length(wins)){
winv<-c(winv,wins[[i]][1,2])
lossv<-c(lossv,loss[[i]][1,2])
}
winv<-as.numeric(winv)
lossv<-as.numeric(lossv)
df<-data.frame(mgrv,winv,lossv)
df<-df %>% group_by(mgrv) %>% summarise(tg=winv+lossv,wins=winv,losses=lossv,winperc=wins/tg)
df %>% group_by(mgrv) %>%
summarise(tg=sum(tg),wins=sum(wins),losses=sum(losses),winperc=wins/tg) %>%
arrange(desc(tg))
df %>% group_by(mgrv) %>%
summarise(tg=sum(tg),wins=sum(wins),losses=sum(losses),winperc=wins/tg) %>%
arrange(desc(mgrv))
df %>% group_by(mgrv) %>%
summarise(tg=sum(tg),wins=sum(wins),losses=sum(losses),winperc=wins/tg) %>%
arrange((mgrv))
mgr<-baseball %>% select(Managers)
mgrex <- "(T.La Russa|\\w\\.\\w+)"
recrex<-"(\\(\\d{1,3}\\-\\d{1,3}\\))"
mgrmatch<-str_match_all(mgr$Managers, mgrex)
mgrv<-c()
for(i in 1:length(mgrmatch)){
mgrv<-c(mgrv,mgrmatch[[i]][1,1])
}
mgrv<-factor(mgrv)
recmatch<-str_match_all(mgr$Managers,recrex)
wins<-str_match_all(recmatch,"\\((\\d{1,3})\\-\\d{1,3}\\)")
loss<-str_match_all(recmatch,"\\(\\d{1,3}\\-(\\d{1,3})\\)")
winv<-lossv<-c()
for(i in 1:length(wins)){
winv<-c(winv,wins[[i]][1,2])
lossv<-c(lossv,loss[[i]][1,2])
}
winv<-as.numeric(winv)
lossv<-as.numeric(lossv)
df<-data.frame(mgrv,winv,lossv)
df<-df %>% group_by(mgrv) %>% summarise(tg=winv+lossv,wins=winv,losses=lossv,winperc=wins/tg)
df %>% group_by(mgrv) %>%
summarise(tg=sum(tg),wins=sum(wins),losses=sum(losses),winperc=wins/tg) %>%
arrange(desc(mgrv))
mgr<-baseball %>% select(Managers)
mgrex <- "(T.La Russa|\\w\\.\\w+)"
recrex<-"(\\(\\d{1,3}\\-\\d{1,3}\\))"
mgrmatch<-str_match_all(mgr$Managers, mgrex)
mgrv<-c()
for(i in 1:length(mgrmatch)){
mgrv<-c(mgrv,mgrmatch[[i]][1,1])
}
mgrv<-factor(mgrv)
recmatch<-str_match_all(mgr$Managers,recrex)
wins<-str_match_all(recmatch,"\\((\\d{1,3})\\-\\d{1,3}\\)")
loss<-str_match_all(recmatch,"\\(\\d{1,3}\\-(\\d{1,3})\\)")
winv<-lossv<-c()
for(i in 1:length(wins)){
winv<-c(winv,wins[[i]][1,2])
lossv<-c(lossv,loss[[i]][1,2])
}
winv<-as.numeric(winv)
lossv<-as.numeric(lossv)
df<-data.frame(mgrv,winv,lossv)
df<-df %>% group_by(mgrv) %>% summarise(tg=winv+lossv,wins=winv,losses=lossv,winperc=wins/tg)
df %>% group_by(mgrv) %>%
summarise(tg=sum(tg),wins=sum(wins),losses=sum(losses),winperc=wins/tg) %>%
arrange(desc(tg))
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
rm(list=ls())
source("outbreak_vis.R") #script with functions
rgx <- "\\d{1,2}\\/\\d{1,2}\\/\\d{4}" #date structure regex
true <- read.csv("/Volumes/GoogleDrive/.shortcut-targets-by-id/15UGkfREtfqH3LdfHmCsSpFJ5SrTnSeyt/ebola/2020-05-04_ebola/2020-05-04_data.csv")
true <- true[str_detect(true$Date, rgx),] #omits rows without a date
colnames(true) <- c("date", "cases")
true$date <- mdy(true$date)
true$cases[is.na(true$cases)] <- 0
true <- true %>% mutate(total = cumsum(cases))
last_date <- true$date[length(true$date)]
last_case <- true$total[length(true$total)]
rm(list=ls())
source("outbreak_vis.R") #script with functions
rgx <- "\\d{1,2}\\/\\d{1,2}\\/\\d{4}" #date structure regex
true <- read.csv("/Volumes/GoogleDrive/.shortcut-targets-by-id/15UGkfREtfqH3LdfHmCsSpFJ5SrTnSeyt/ebola/2020-05-04_ebola/2020-05-04_data.csv")
true <- true[str_detect(true$Date, rgx),] #omits rows without a date
colnames(true) <- c("date", "cases")
true$date <- mdy(true$date)
true$cases[is.na(true$cases)] <- 0
true <- true %>% mutate(total = cumsum(cases))
last_date <- true$date[length(true$date)]
last_case <- true$total[length(true$total)]
plot(true$date, true$total, type = "l", lwd = 3,
xlab = "Date", ylab = "Total Cases",
main = "Actual Recorded DRC Ebola Cases")
p <- ggplot(data = true,
mapping = aes(x = date, y = total)) +
geom_line() + theme_light() # graph of runinng total of cases
p + labs(title = "Actual Recorded DRC Ebola Cases")
full_forecast("2018-10-31",c(15,28,42))
multi_forecast("2018-08-27",c(15,24,31)) #shows predicted vs actual for one forecast
multi_forecast("2018-09-27",c(10,18,27)) #shows predicted vs actual for one forecast
title <- "Forecasts vs Actual in 2018"
dv <- c("2018-08-27","2018-09-27","2018-10-31","2018-11-29","2018-12-30")
mt <- cbind(c(15,24,31),c(10,18,27),c(15,28,42),c(15,29,41),c(21,40,60))
multi_forecast(dv, mt, title = title)
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
title <- "14-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 14, title = title)
title <- "21-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 21, title = title)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
rm(list=ls())
source("outbreak_vis.R") #script with functions
rgx <- "\\d{1,2}\\/\\d{1,2}\\/\\d{4}" #date structure regex
true <- read.csv("/Volumes/GoogleDrive/.shortcut-targets-by-id/15UGkfREtfqH3LdfHmCsSpFJ5SrTnSeyt/ebola/2020-05-04_ebola/2020-05-04_data.csv")
true <- true[str_detect(true$Date, rgx),] #omits rows without a date
colnames(true) <- c("date", "cases")
true$date <- mdy(true$date)
true$cases[is.na(true$cases)] <- 0
true <- true %>% mutate(total = cumsum(cases))
last_date <- true$date[length(true$date)]
last_case <- true$total[length(true$total)]
plot(true$date, true$total, type = "l", lwd = 3,
xlab = "Date", ylab = "Total Cases",
main = "Actual Recorded DRC Ebola Cases")
p <- ggplot(data = true,
mapping = aes(x = date, y = total)) +
geom_line() + theme_light() # graph of runinng total of cases
p + labs(title = "Actual Recorded DRC Ebola Cases")
full_forecast("2018-10-31",c(15,28,42))
multi_forecast("2018-08-27",c(15,24,31)) #shows predicted vs actual for one forecast
multi_forecast("2018-09-27",c(10,18,27)) #shows predicted vs actual for one forecast
title <- "Forecasts vs Actual in 2018"
dv <- c("2018-08-27","2018-09-27","2018-10-31","2018-11-29","2018-12-30")
mt <- cbind(c(15,24,31),c(10,18,27),c(15,28,42),c(15,29,41),c(21,40,60))
multi_forecast(dv, mt, title = title)
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
title <- "14-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 14, title = title)
title <- "21-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 21, title = title)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "Forecasts vs Actual in 2018"
dv <- c("2018-08-27","2018-09-27","2018-10-31","2018-11-29","2018-12-30")
mt <- cbind(c(15,24,31),c(10,18,27),c(15,28,42),c(15,29,41),c(21,40,60))
multi_forecast(dv, mt, title = title)
rm(list=ls())
source("outbreak_vis.R") #script with functions
rgx <- "\\d{1,2}\\/\\d{1,2}\\/\\d{4}" #date structure regex
true <- read.csv("/Volumes/GoogleDrive/.shortcut-targets-by-id/15UGkfREtfqH3LdfHmCsSpFJ5SrTnSeyt/ebola/2020-05-04_ebola/2020-05-04_data.csv")
true <- true[str_detect(true$Date, rgx),] #omits rows without a date
colnames(true) <- c("date", "cases")
true$date <- mdy(true$date)
true$cases[is.na(true$cases)] <- 0
true <- true %>% mutate(total = cumsum(cases))
last_date <- true$date[length(true$date)]
last_case <- true$total[length(true$total)]
plot(true$date, true$total, type = "l", lwd = 3,
xlab = "Date", ylab = "Total Cases",
main = "Actual Recorded DRC Ebola Cases")
p <- ggplot(data = true,
mapping = aes(x = date, y = total)) +
geom_line() + theme_light() # graph of runinng total of cases
p + labs(title = "Actual Recorded DRC Ebola Cases")
full_forecast("2018-10-31",c(15,28,42))
multi_forecast("2018-08-27",c(15,24,31)) #shows predicted vs actual for one forecast
multi_forecast("2018-09-27",c(10,18,27)) #shows predicted vs actual for one forecast
title <- "Forecasts vs Actual in 2018"
dv <- c("2018-08-27","2018-09-27","2018-10-31","2018-11-29","2018-12-30")
mt <- cbind(c(15,24,31),c(10,18,27),c(15,28,42),c(15,29,41),c(21,40,60))
multi_forecast(dv, mt, title = title)
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
title <- "14-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 14, title = title)
title <- "21-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 21, title = title)
plot(true$date, true$total, type = "l", lwd = 3,
xlab = "Date", ylab = "Total Cases",
main = "Actual Recorded DRC Ebola Cases")
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "21-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 21, title = title)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
rm(list=ls())
source("outbreak_vis.R") #script with functions
rgx <- "\\d{1,2}\\/\\d{1,2}\\/\\d{4}" #date structure regex
true <- read.csv("/Volumes/GoogleDrive/.shortcut-targets-by-id/15UGkfREtfqH3LdfHmCsSpFJ5SrTnSeyt/ebola/2020-05-04_ebola/2020-05-04_data.csv")
true <- true[str_detect(true$Date, rgx),] #omits rows without a date
colnames(true) <- c("date", "cases")
true$date <- mdy(true$date)
true$cases[is.na(true$cases)] <- 0
true <- true %>% mutate(total = cumsum(cases))
last_date <- true$date[length(true$date)]
last_case <- true$total[length(true$total)]
plot(true$date, true$total, type = "l", lwd = 3,
xlab = "Date", ylab = "Total Cases",
main = "Actual Recorded DRC Ebola Cases")
p <- ggplot(data = true,
mapping = aes(x = date, y = total)) +
geom_line() + theme_light() # graph of runinng total of cases
p + labs(title = "Actual Recorded DRC Ebola Cases")
full_forecast("2018-10-31",c(15,28,42))
multi_forecast("2018-08-27",c(15,24,31)) #shows predicted vs actual for one forecast
multi_forecast("2018-09-27",c(10,18,27)) #shows predicted vs actual for one forecast
title <- "Forecasts vs Actual in 2018"
dv <- c("2018-08-27","2018-09-27","2018-10-31","2018-11-29","2018-12-30")
mt <- cbind(c(15,24,31),c(10,18,27),c(15,28,42),c(15,29,41),c(21,40,60))
multi_forecast(dv, mt, title = title)
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
title <- "14-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 14, title = title)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
title <- "14-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 14, title = title)
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
true
as.Date("2009-09-08")+7
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
dfdate
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
as.Date(c("09-08-7909","01-03-2000"))+9
as.Date(c("09-08-20009","01-03-2000"))+9
as.Date(c("09-08-2009","01-03-2000"))+9
as.Date(c("2009-09-09","2000-06-04"))+9
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
dfdate
total_vec
otal_vec + forecast_mat[1,]
total_vec + forecast_mat[1,]
true$total[true$date == as.Date(date_vec) + 7]
as.Date(date_vec) + 7
as.Date(date_vec)
true
rm(list=ls())
source("outbreak_vis.R") #script with functions
rgx <- "\\d{1,2}\\/\\d{1,2}\\/\\d{4}" #date structure regex
true <- read.csv("/Volumes/GoogleDrive/.shortcut-targets-by-id/15UGkfREtfqH3LdfHmCsSpFJ5SrTnSeyt/ebola/2020-05-04_ebola/2020-05-04_data.csv")
true <- true[str_detect(true$Date, rgx),] #omits rows without a date
colnames(true) <- c("date", "cases")
true$date <- mdy(true$date)
true$cases[is.na(true$cases)] <- 0
true <- true %>% mutate(total = cumsum(cases))
last_date <- true$date[length(true$date)]
last_case <- true$total[length(true$total)]
plot(true$date, true$total, type = "l", lwd = 3,
xlab = "Date", ylab = "Total Cases",
main = "Actual Recorded DRC Ebola Cases")
p <- ggplot(data = true,
mapping = aes(x = date, y = total)) +
geom_line() + theme_light() # graph of runinng total of cases
p + labs(title = "Actual Recorded DRC Ebola Cases")
full_forecast("2018-10-31",c(15,28,42))
multi_forecast("2018-08-27",c(15,24,31)) #shows predicted vs actual for one forecast
multi_forecast("2018-09-27",c(10,18,27)) #shows predicted vs actual for one forecast
title <- "Forecasts vs Actual in 2018"
dv <- c("2018-08-27","2018-09-27","2018-10-31","2018-11-29","2018-12-30")
mt <- cbind(c(15,24,31),c(10,18,27),c(15,28,42),c(15,29,41),c(21,40,60))
multi_forecast(dv, mt, title = title)
true
View(true)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
as.character(1:9)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
true$total[true$date == (as.Date(date_vec) + 7)]
as.Date(date_vec) + 7
Q
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
true$total[true$date == (as.Date(date_vec) + 7),]
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
View(true)
true$total[true$date=="2018-05-03"]
true$total[true$date=="2018-05-03",]
true$total[true$date=="2018-05-03"]
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
true$total[(true$date == (as.Date(date_vec) + 7))]
true$total[true$date == as.character(as.Date(date_vec) + 7)]
as.character(as.Date(date_vec) + 7)
true$total[true$date == "2019-01-06"]
true$total[true$date == c("2019-01-06","2018-12-06")]
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
source('~/Desktop/Git/Ebola-Forecasting/Post Outbreak/outbreak_vis.R')
rm(list=ls())
source("outbreak_vis.R") #script with functions
rgx <- "\\d{1,2}\\/\\d{1,2}\\/\\d{4}" #date structure regex
true <- read.csv("/Volumes/GoogleDrive/.shortcut-targets-by-id/15UGkfREtfqH3LdfHmCsSpFJ5SrTnSeyt/ebola/2020-05-04_ebola/2020-05-04_data.csv")
true <- true[str_detect(true$Date, rgx),] #omits rows without a date
colnames(true) <- c("date", "cases")
true$date <- mdy(true$date)
true$cases[is.na(true$cases)] <- 0
true <- true %>% mutate(total = cumsum(cases))
last_date <- true$date[length(true$date)]
last_case <- true$total[length(true$total)]
plot(true$date, true$total, type = "l", lwd = 3,
xlab = "Date", ylab = "Total Cases",
main = "Actual Recorded DRC Ebola Cases")
p <- ggplot(data = true,
mapping = aes(x = date, y = total)) +
geom_line() + theme_light() # graph of runinng total of cases
p + labs(title = "Actual Recorded DRC Ebola Cases")
full_forecast("2018-10-31",c(15,28,42))
multi_forecast("2018-08-27",c(15,24,31)) #shows predicted vs actual for one forecast
multi_forecast("2018-09-27",c(10,18,27)) #shows predicted vs actual for one forecast
title <- "Forecasts vs Actual in 2018"
dv <- c("2018-08-27","2018-09-27","2018-10-31","2018-11-29","2018-12-30")
mt <- cbind(c(15,24,31),c(10,18,27),c(15,28,42),c(15,29,41),c(21,40,60))
multi_forecast(dv, mt, title = title)
true
title <- "7-Day Forecasts vs Actual in 2018"
single_forecast(dv, mt, days = 7, title = title)
single_forecast(dv, mt, days = 7, title = title, res = TRUE)
